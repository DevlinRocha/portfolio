/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const WheresWaldoLazyImport = createFileRoute('/wheres-waldo')()
const VvordleLazyImport = createFileRoute('/vvordle')()
const PokemonRouletteLazyImport = createFileRoute('/pokemon-roulette')()
const BanterLazyImport = createFileRoute('/banter')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const WheresWaldoLazyRoute = WheresWaldoLazyImport.update({
  id: '/wheres-waldo',
  path: '/wheres-waldo',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/wheres-waldo.lazy').then((d) => d.Route))

const VvordleLazyRoute = VvordleLazyImport.update({
  id: '/vvordle',
  path: '/vvordle',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/vvordle.lazy').then((d) => d.Route))

const PokemonRouletteLazyRoute = PokemonRouletteLazyImport.update({
  id: '/pokemon-roulette',
  path: '/pokemon-roulette',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/pokemon-roulette.lazy').then((d) => d.Route),
)

const BanterLazyRoute = BanterLazyImport.update({
  id: '/banter',
  path: '/banter',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/banter.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/banter': {
      id: '/banter'
      path: '/banter'
      fullPath: '/banter'
      preLoaderRoute: typeof BanterLazyImport
      parentRoute: typeof rootRoute
    }
    '/pokemon-roulette': {
      id: '/pokemon-roulette'
      path: '/pokemon-roulette'
      fullPath: '/pokemon-roulette'
      preLoaderRoute: typeof PokemonRouletteLazyImport
      parentRoute: typeof rootRoute
    }
    '/vvordle': {
      id: '/vvordle'
      path: '/vvordle'
      fullPath: '/vvordle'
      preLoaderRoute: typeof VvordleLazyImport
      parentRoute: typeof rootRoute
    }
    '/wheres-waldo': {
      id: '/wheres-waldo'
      path: '/wheres-waldo'
      fullPath: '/wheres-waldo'
      preLoaderRoute: typeof WheresWaldoLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/banter': typeof BanterLazyRoute
  '/pokemon-roulette': typeof PokemonRouletteLazyRoute
  '/vvordle': typeof VvordleLazyRoute
  '/wheres-waldo': typeof WheresWaldoLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/banter': typeof BanterLazyRoute
  '/pokemon-roulette': typeof PokemonRouletteLazyRoute
  '/vvordle': typeof VvordleLazyRoute
  '/wheres-waldo': typeof WheresWaldoLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/banter': typeof BanterLazyRoute
  '/pokemon-roulette': typeof PokemonRouletteLazyRoute
  '/vvordle': typeof VvordleLazyRoute
  '/wheres-waldo': typeof WheresWaldoLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/banter'
    | '/pokemon-roulette'
    | '/vvordle'
    | '/wheres-waldo'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/banter'
    | '/pokemon-roulette'
    | '/vvordle'
    | '/wheres-waldo'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/banter'
    | '/pokemon-roulette'
    | '/vvordle'
    | '/wheres-waldo'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AboutLazyRoute: typeof AboutLazyRoute
  BanterLazyRoute: typeof BanterLazyRoute
  PokemonRouletteLazyRoute: typeof PokemonRouletteLazyRoute
  VvordleLazyRoute: typeof VvordleLazyRoute
  WheresWaldoLazyRoute: typeof WheresWaldoLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutLazyRoute: AboutLazyRoute,
  BanterLazyRoute: BanterLazyRoute,
  PokemonRouletteLazyRoute: PokemonRouletteLazyRoute,
  VvordleLazyRoute: VvordleLazyRoute,
  WheresWaldoLazyRoute: WheresWaldoLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/banter",
        "/pokemon-roulette",
        "/vvordle",
        "/wheres-waldo"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/banter": {
      "filePath": "banter.lazy.tsx"
    },
    "/pokemon-roulette": {
      "filePath": "pokemon-roulette.lazy.tsx"
    },
    "/vvordle": {
      "filePath": "vvordle.lazy.tsx"
    },
    "/wheres-waldo": {
      "filePath": "wheres-waldo.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
