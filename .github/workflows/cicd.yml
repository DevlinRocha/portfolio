name: CI/CD Pipeline

on:
    push:
        branches:
            - main
            - staging

    pull_request:
        branches:
            - main
            - staging
    workflow_dispatch:

permissions:
    contents: read

jobs:
    build:
        name: Build
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [22]

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Update Corepack
              run: npm install -g corepack@latest

            - name: Enable Corepack
              run: corepack enable

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'pnpm'

            - name: Install dependencies
              run: pnpm install

            - name: Audit dependencies
              run: pnpm audit

            - name: Prettier
              run: pnpm prettier:check

            - name: Lint
              run: pnpm eslint . --max-warnings 0

            - name: Typecheck
              run: pnpm typecheck --verbose

            - name: Build
              run: pnpm -r build

    deploy:
        name: Deploy
        needs: build
        if: |
            (github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging')) ||
            (github.event_name == 'pull_request' && (github.base_ref == 'main' || github.base_ref == 'staging'))
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ vars.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build and push Docker image
              uses: docker/build-push-action@v6
              env:
                  IS_MAIN: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'pull_request' && github.base_ref == 'main') }}
                  IS_STAGING: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/staging') || (github.event_name == 'pull_request' && github.base_ref == 'staging') }}
              with:
                  context: .
                  file: ./packages/api/Dockerfile
                  platforms: linux/amd64
                  push: true
                  tags: |
                      ${{ env.IS_MAIN && 'devlinrocha/portfolio-api:latest' || '' }}
                      ${{ env.IS_MAIN && 'devlinrocha/portfolio-api:v1.0.0' || '' }}
                      ${{ env.IS_STAGING && 'devlinrocha/portfolio-api:staging' || '' }}
